Test Synth2: POP=100 GEN=20 MUT=0.05 CROSS=0.9 K=50 SEED=0 ELIT=1 ELITOPS=1

***Generation: 1 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: inf
Mean Fitness: inf
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 5
Unique individuals: 95

***Generation: 2 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 1.0001861985939875
Mean Fitness: 0.9999209489846561
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 98
Unique individuals: 2

***Generation: 3 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 4 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 5 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 6 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 7 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 8 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 9 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 10 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 11 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 12 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 13 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 14 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 15 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 16 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 17 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 18 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 19 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 20 ***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Fitness: 0.9999182696956733
Worst Individual Fitness: 0.9999182696956733
Mean Fitness: 0.9999182696956729
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***TEST STATISTICS***
Best Individual: (prot_math.sqrt(((math.sin((prot_math.log2(X[0]))*((X[1])**prot_math.pow(5.41409160883579))))*(math.sin((prot_math.log(42.353567997582104))/prot_math.div((X[0])**prot_math.pow(27.69377618043059)))))+(prot_math.sqrt(prot_math.log2(((X[1])-(-53.96394439528973))/prot_math.div((-52.629092991630586)*(X[1])))))))
Best Individual Train Fitness: 0.9999182696956733
Best Individual Test Fitness: 1.0011613226295872
