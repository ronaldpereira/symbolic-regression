Test Synth2: POP=100 GEN=20 MUT=0.05 CROSS=0.9 K=10 SEED=0 ELIT=1 ELITOPS=1

***Generation: 1 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: inf
Mean Fitness: inf
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 7
Unique individuals: 93

***Generation: 2 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0222307808720374
Mean Fitness: 1.0002231504290315
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 98
Unique individuals: 2

***Generation: 3 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 4 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 5 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 6 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 7 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 8 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 9 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 10 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 11 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 12 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 13 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 14 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 15 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 16 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 17 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 18 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 19 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 20 ***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316276
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***TEST STATISTICS***
Best Individual: (math.sin(prot_math.log2((((prot_math.log(X[1]))+((-7.76002739718615)**prot_math.pow(-44.43514509971329)))/prot_math.div(((X[1])**prot_math.pow(X[0]))/prot_math.div((69.20878757333148)*(X[0]))))*(prot_math.sqrt(prot_math.log(prot_math.log10(-12.16366582939581)))))))
Best Individual Train Fitness: 1.0000008511316272
Best Individual Test Fitness: 1.0024506514680755
