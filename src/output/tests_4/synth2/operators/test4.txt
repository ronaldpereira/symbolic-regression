Test Synth2: POP=100 GEN=20 MUT=0.6 CROSS=0.4 K=2 SEED=0 ELIT=1 ELITOPS=1

***Generation: 1 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: inf
Mean Fitness: inf
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 7
Unique individuals: 93

***Generation: 2 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 3.01023786948473
Mean Fitness: 1.010086685846598
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 96
Unique individuals: 4

***Generation: 3 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 4 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 5 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 6 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 7 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 8 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 9 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 10 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 11 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 12 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 13 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 14 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 15 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 16 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 17 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 18 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 19 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***Generation: 20 ***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Fitness: 0.9476520399908583
Worst Individual Fitness: 0.9476520399908583
Mean Fitness: 0.9476520399908569
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 99
Unique individuals: 1

***TEST STATISTICS***
Best Individual: (math.sin(((math.sin(prot_math.log(82.76423417742393)))-((((-24.300350223235483)**prot_math.pow(X[0]))*((X[1])/prot_math.div(-41.77867585599255)))*((X[0])**prot_math.pow(prot_math.log2(4.570564430787584)))))+(prot_math.log((math.cos(45.47464384133181))+(prot_math.log10(X[1]))))))
Best Individual Train Fitness: 0.9476520399908583
Best Individual Test Fitness: 0.96675279021452
