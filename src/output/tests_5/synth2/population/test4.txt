Test Synth2: POP=500 GEN=20 MUT=0.05 CROSS=0.9 K=2 SEED=0 ELIT=1 ELITOPS=1

***Generation: 1 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: inf
Mean Fitness: nan
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 42
Unique individuals: 458

***Generation: 2 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0001861985941976
Mean Fitness: 1.0000052994707318
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 498
Unique individuals: 2

***Generation: 3 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 4 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 5 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 6 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 7 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 8 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 9 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 10 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 11 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 12 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 13 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 14 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 15 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 16 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 17 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 18 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 19 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***Generation: 20 ***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Fitness: 1.0000008511316272
Worst Individual Fitness: 1.0000008511316272
Mean Fitness: 1.0000008511316303
Crossover child worse than fathers' mean: 0
Crossover child better than fathers' mean: 0
Repeated individuals: 499
Unique individuals: 1

***TEST STATISTICS***
Best Individual: (math.sin(prot_math.log2(prot_math.log((((X[1])+(X[0]))**prot_math.pow(prot_math.log(-33.326488540464496)))+((prot_math.sqrt(X[0]))-(prot_math.log10(-31.303113439706905)))))))
Best Individual Train Fitness: 1.0000008511316272
Best Individual Test Fitness: 1.0024506514680755
